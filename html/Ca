<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CAREENA</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', system-ui, sans-serif;
            box-sizing: border-box;
        }

        .container {
            min-height: 100vh;
            width: 100%;
            background: linear-gradient(135deg, #10dede 0%, #ffffff 100%);
            background-size: 300% 300%;
            animation: gradient 12s ease-in-out infinite;
            overflow-x: hidden;
        }

        @keyframes gradient {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        .navbar {
            padding: 1rem 2rem;
            display: flex;
            justify-content: flex-end;
            align-items: center;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
        }

        .inner-nav {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .nav-btn {
            padding: 0.8rem 1.5rem;
            border-radius: 50px;
            border: none;
            font-size: 1rem;
            background: rgba(255, 255, 255, 0.2);
            color: #05445E;
            transition: all 0.3s ease;
            backdrop-filter: blur(5px);
            cursor: pointer;
        }

        .nav-btn:hover {
            background: rgba(255, 255, 255, 0.4);
            transform: translateY(-2px);
        }

        ul li {
            list-style: none;
            color: #05445E;
            padding: 0.8rem 1.5rem;
            border-radius: 50px;
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(5px);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        ul li:hover {
            background: rgba(255, 255, 255, 0.4);
            transform: translateY(-2px);
        }

        .content-wrapper {
            padding-top: 100px;
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
        }

        .chatBot-img {
            height: 200px;
            width: 200px;
            background-image: url(chatbotphoto.avif);
            background-size: cover;
            border-radius: 50%;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            margin: 2rem 0;
            border: 5px solid rgba(255, 255, 255, 0.3);
        }

        .welcome-heading {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.5rem;
            margin: 2rem 0;
        }

        #welcome {
            color: #05445E;
            font-size: 2rem;
            font-weight: 300;
        }

        #CAREENA {
            color: #05445E;
            font-weight: bold;
            font-size: 4rem;
            letter-spacing: 2px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }

        .welcome-para {
            max-width: 600px;
            margin: 1rem auto;
            color: #05445E;
            font-size: 1.2rem;
            line-height: 1.6;
            padding: 0 1rem;
        }

        .btn-div {
            margin: 3rem 0;
        }

        #chat-btn {
            padding: 1rem 2rem;
            min-width: 200px;
            border-radius: 50px;
            border: none;
            font-size: 1.1rem;
            background: linear-gradient(135deg, #006666 0%, #33cccc 100%);
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        #chat-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        }

        #chat-btn:active {
            transform: translateY(-1px);
        }

        .anim {
            opacity: 0;
            transform: translateY(30px);
            animation: moveup 1s ease-out forwards;
        }

        @keyframes moveup {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @media (max-width: 768px) {
            .navbar {
                padding: 1rem;
            }

            #CAREENA {
                font-size: 3rem;
            }

            .welcome-para {
                font-size: 1rem;
            }

            .chatBot-img {
                height: 150px;
                width: 150px;
            }
        }

        @media (max-width: 480px) {
            .inner-nav {
                gap: 0.5rem;
            }

            .nav-btn, ul li {
                padding: 0.6rem 1rem;
                font-size: 0.9rem;
            }

            #welcome {
                font-size: 1.5rem;
            }

            #CAREENA {
                font-size: 2.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <nav class="navbar">
                <div class="inner-nav">
                    <button class="nav-btn" id="log-in-btn">Login</button>
                    <ul>
                        <li>Sign up</li>
                    </ul>
                </div>
            </nav>
        </header>
        <div class="content-wrapper">
            <div class="chatBot-img anim"></div>
            <div class="welcome-heading anim">
                <p id="welcome">Welcome to</p>
                <p id="CAREENA">CAREENA</p>
            </div>
            <div class="welcome-para anim">
                <p>Power Symptom Checker AI: Revolutionizing Healthcare</p>
            </div>
            <div class="btn-div anim">
                <button id="chat-btn">
                    <i class="fa-solid fa-wand-magic-sparkles"></i>
                    Let's Explore
                </button>
            </div>
        </div>
    </div>
    <script>
        document.getElementById("log-in-btn")?.addEventListener("click", () => {
            window.location.href = "login.html";
        });

        document.querySelector("ul li")?.addEventListener("click", () => {
            window.location.href = "signUP.html";
        });

        document.getElementById("chat-btn")?.addEventListener("click", () => {
            window.location.href = "Ca2.html";
        });
        //This part is added from original code.
        document.querySelector(".forgot-password")?.addEventListener("click", () => {
            window.location.href = "forgotPass.html";
        });

        document.querySelector(".login-link")?.addEventListener("click", () => {
            window.location.href = "login.html";
        });


        document.querySelector(".signup-container form")?.addEventListener("submit", (event) => {
            event.preventDefault();
            let fullname = document.getElementById("fullname").value;
            let email = document.getElementById("email").value;
            let username = document.getElementById("username").value;
            let password = document.getElementById("password").value;
            let confirmPassword = document.getElementById("confirm-password").value;

            if (password !== confirmPassword) {
                alert("Passwords do not match!");
                return;
            }

            let users = JSON.parse(localStorage.getItem("users")) || {};
            if (users[username]) {
                alert("Username already exists! Try logging in.");
            } else {
                users[username] = { fullname, email, password };
                localStorage.setItem("users", JSON.stringify(users));
                alert("Signup successful! Redirecting to login.");
                window.location.href = "login.html";
            }
        });


        document.querySelector(".login-container form")?.addEventListener("submit", (event) => {
            event.preventDefault();
            let username = document.getElementById("username").value;
            let password = document.getElementById("password").value;

            let users = JSON.parse(localStorage.getItem("users")) || {};
            if (users[username] && users[username].password === password) {
                alert("Login successful! Redirecting to chatbot.");
                localStorage.setItem("loggedInUser", username);
                window.location.href = "Ca2.html";
            } else {
                alert("Invalid credentials! Redirecting to login error page.");
                window.location.href = "loginError.html";
            }
        });


        document.querySelector(".container form")?.addEventListener("submit", (event) => {
            event.preventDefault();
            let email = document.getElementById("email").value;
            let otp = Math.floor(100000 + Math.random() * 900000);
            localStorage.setItem("otp", otp);
            alert(`An OTP has been sent to ${email}: ${otp} (Simulated for now)`);
            window.location.href = "otp.html";
        });


        document.querySelector(".otp-container form")?.addEventListener("submit", (event) => {
            event.preventDefault();
            let enteredOtp = document.getElementById("otp").value;
            let storedOtp = localStorage.getItem("otp");

            if (enteredOtp === storedOtp) {
                alert("OTP Verified! Redirecting to chatbot.");
                localStorage.removeItem("otp");
                window.location.href = "Ca2.html";
            } else {
                alert("Invalid OTP! Please try again.");
            }
        });

        function sendMessage() {
            let userMessage = document.getElementById("input").value;

            fetch("http://127.0.0.1:5500/chat", {
                method: "POST",
                body: JSON.stringify({ message: userMessage }),
                headers: { "Content-Type": "application/json" }
            })
                .then(response => response.json())
                .then(data => {
                    let chatbox = document.querySelector(".ans-div");
                    chatbox.innerHTML += `<p><b>You:</b> ${userMessage}</p>`;
                    chatbox.innerHTML += `<p><b>Bot:</b> ${data.reply}</p>`;
                    document.getElementById("input").value = "";
                });
        }


        document.getElementById("input")?.addEventListener("keypress", (event) => {
            if (event.key === "Enter") {
                sendMessage();
            }
        });


        document.getElementById("microphone-btn")?.addEventListener("click", () => {
            let recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
            recognition.lang = "en-US";
            recognition.start();

            recognition.onresult = (event) => {
                let voiceInput = event.results[0][0].transcript;
                document.getElementById("input").value = voiceInput;
                sendMessage();
            };

            recognition.onerror = () => {
                alert("Voice recognition error. Please try again.");
            };
        });

    </script>
</body>
</html>
