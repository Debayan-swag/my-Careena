<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up - CAREENA</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: linear-gradient(135deg, #A0E7E5 0%, #80CED7 100%);
            font-family: 'Segoe UI', sans-serif;
            padding: 20px;
        }

        .signup-container {
            background: rgba(255, 255, 255, 0.95);
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 450px;
            text-align: center;
            transition: transform 0.3s ease;
        }

        .signup-container:hover {
            transform: translateY(-5px);
        }

        .signup-container h2 {
            color: #2C3E50;
            margin-bottom: 30px;
            font-size: 2em;
        }

        .input-group {
            margin-bottom: 20px;
            text-align: left;
        }

        .input-group label {
            display: block;
            margin-bottom: 8px;
            color: #34495E;
            font-weight: 500;
            font-size: 0.9em;
        }

        .input-group input {
            width: 100%;
            padding: 12px;
            border: 2px solid #E0E0E0;
            border-radius: 10px;
            outline: none;
            transition: border-color 0.3s ease;
            font-size: 1em;
        }

        .input-group input:focus {
            border-color: #80CED7;
        }

        .btn {
            width: 100%;
            padding: 14px;
            background: linear-gradient(to right, #006666, #33cccc);
            color: white;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-size: 1em;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-top: 10px;
        }

        .btn:hover {
            background: linear-gradient(to right, #005555, #2ba7a7);
            transform: translateY(-2px);
        }

        .btn:active {
            transform: translateY(0);
        }

        .login-link {
            display: inline-block;
            margin-top: 20px;
            color: #666;
            text-decoration: none;
            font-size: 0.9em;
            transition: color 0.3s ease;
        }

        .login-link:hover {
            color: #006666;
            text-decoration: underline;
        }

        @media (max-width: 480px) {
            .signup-container {
                padding: 30px 20px;
            }
        }
    </style>
</head>
<body>
    <div class="signup-container">
        <h2>Create Account</h2>
        <form action="#" method="POST">
            <div class="input-group">
                <label for="fullname">Full Name</label>
                <input type="text" id="fullname" name="fullname" required placeholder="Enter your full name">
            </div>
            <div class="input-group">
                <label for="email">Email</label>
                <input type="email" id="email" name="email" required placeholder="Enter your email">
            </div>
            <div class="input-group">
                <label for="username">Username</label>
                <input type="text" id="username" name="username" required placeholder="Choose a username">
            </div>
            <div class="input-group">
                <label for="password">Password</label>
                <input type="password" id="password" name="password" required placeholder="Create a password">
            </div>
            <div class="input-group">
                <label for="confirm-password">Confirm Password</label>
                <input type="password" id="confirm-password" name="confirm-password" required placeholder="Confirm your password">
            </div>
            <button type="submit" class="btn">Sign Up</button>
        </form>
        <a href="#" class="login-link">Already have an account? Login</a>
    </div>
    <script>
        // Navigation buttons
        document.getElementById("log-in-btn")?.addEventListener("click", () => {
            window.location.href = "login.html";
        });

        document.querySelector("ul li")?.addEventListener("click", () => {
            window.location.href = "signUP.html";
        });

        document.getElementById("chat-btn")?.addEventListener("click", () => {
            window.location.href = "Ca2.html";
        });

        document.querySelector(".forgot-password")?.addEventListener("click", () => {
            window.location.href = "forgotPass.html";
        });

        document.querySelector(".login-link")?.addEventListener("click", () => {
            window.location.href = "login.html";
        });

        // Signup Functionality
        document.querySelector(".signup-container form")?.addEventListener("submit", (event) => {
            event.preventDefault();
            let fullname = document.getElementById("fullname").value;
            let email = document.getElementById("email").value;
            let username = document.getElementById("username").value;
            let password = document.getElementById("password").value;
            let confirmPassword = document.getElementById("confirm-password").value;

            if (password !== confirmPassword) {
                alert("Passwords do not match!");
                return;
            }

            let users = JSON.parse(localStorage.getItem("users")) || {};
            if (users[username]) {
                alert("Username already exists! Try logging in.");
            } else {
                users[username] = { fullname, email, password };
                localStorage.setItem("users", JSON.stringify(users));
                alert("Signup successful! Redirecting to login.");
                window.location.href = "login.html";
            }
        });

        // Login Functionality
        document.querySelector(".login-container form")?.addEventListener("submit", (event) => {
            event.preventDefault();
            let username = document.getElementById("username").value;
            let password = document.getElementById("password").value;

            let users = JSON.parse(localStorage.getItem("users")) || {};
            if (users[username] && users[username].password === password) {
                alert("Login successful! Redirecting to chatbot.");
                localStorage.setItem("loggedInUser", username);
                window.location.href = "Ca2.html";
            } else {
                alert("Invalid credentials! Redirecting to login error page.");
                window.location.href = "loginError.html";
            }
        });

        // Forgot Password Functionality
        document.querySelector(".container form")?.addEventListener("submit", (event) => {
            event.preventDefault();
            let email = document.getElementById("email").value;
            let otp = Math.floor(100000 + Math.random() * 900000);
            localStorage.setItem("otp", otp);
            alert(`An OTP has been sent to ${email}: ${otp} (Simulated for now)`);
            window.location.href = "otp.html";
        });

        // OTP Verification Functionality
        document.querySelector(".otp-container form")?.addEventListener("submit", (event) => {
            event.preventDefault();
            let enteredOtp = document.getElementById("otp").value;
            let storedOtp = localStorage.getItem("otp");

            if (enteredOtp === storedOtp) {
                alert("OTP Verified! Redirecting to chatbot.");
                localStorage.removeItem("otp");
                window.location.href = "Ca2.html";
            } else {
                alert("Invalid OTP! Please try again.");
            }
        });

        // Chatbot Functionality
        function sendMessage() {
            let userMessage = document.getElementById("input").value;

            fetch("http://127.0.0.1:5500/chat", {
                method: "POST",
                body: JSON.stringify({ message: userMessage }),
                headers: { "Content-Type": "application/json" }
            })
                .then(response => response.json())
                .then(data => {
                    let chatbox = document.querySelector(".ans-div");
                    chatbox.innerHTML += `<p><b>You:</b> ${userMessage}</p>`;
                    chatbox.innerHTML += `<p><b>Bot:</b> ${data.reply}</p>`;
                    document.getElementById("input").value = "";
                });
        }

        // Trigger sendMessage on Enter Key press
        document.getElementById("input")?.addEventListener("keypress", (event) => {
            if (event.key === "Enter") {
                sendMessage();
            }
        });

        // Voice Recognition (Microphone)
        document.getElementById("microphone-btn")?.addEventListener("click", () => {
            let recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
            recognition.lang = "en-US";
            recognition.start();

            recognition.onresult = (event) => {
                let voiceInput = event.results[0][0].transcript;
                document.getElementById("input").value = voiceInput;
                sendMessage();
            };

            recognition.onerror = () => {
                alert("Voice recognition error. Please try again.");
            };
        });

    </script>
</body>
</html>
